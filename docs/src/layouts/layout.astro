---
interface Props {
  title: string;
}

// View Transitions:
import { ViewTransitions } from 'astro:transitions';

// Styles:
import '@/styles/globals.css';
import { cn } from '@/utils';

// Providers:
import { Toaster } from '@pheralb/toast';

// Layout components:
import Header from '@/components/header.astro';
import Sidebar from '@/components/sidebar/sidebar.astro';

const { title } = Astro.props;
---

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme');
    }
    return window.matchMedia('(prefers-color-scheme: dark)').matches
      ? 'dark'
      : 'light';
  };
  const isDark = getThemePreference() === 'dark';
  document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

  if (typeof localStorage !== 'undefined') {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains('dark');
      localStorage.setItem('theme', isDark ? 'dark' : 'light');
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ['class'],
    });
  }
</script>

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <ViewTransitions />
  </head>
  <body
    class={cn(
      'font-sans antialiased',
      'bg-neutral-50 dark:bg-neutral-900',
      'text-neutral-900 dark:text-neutral-50',
    )}
  >
    <Header />
    <main class="container w-full max-w-7xl">
      <aside class="hidden md:block">
        <Sidebar />
      </aside>
      <slot />
    </main>
    <Toaster toastFont="font-sans" client:only="react" />
  </body>
</html>
